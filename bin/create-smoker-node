#!/usr/bin/env perl
use v5.30.0;
use warnings;

use IO::Async;
use JSON::MaybeXS;
use Net::Async::HTTP;

# pick the right Linode type to build
#   https://www.linode.com/docs/api/linode-types/#types-list
#   (prototype is "g6-standard-2")
# find the right Linode base image with API
#   https://www.linode.com/docs/api/images/#images-list
#   (probably "linode/debian10")
# create Linode with API
#   https://www.linode.com/docs/api/linode-instances/#linode-create
# clone and attach minicpan volume to new Linode instance

my $loop = IO::Async::Loop->new;
my $http = Net::Async::HTTP->new;
$loop->add($http);

my $WANT_TYPE   = 'g6-standard-2';
my $WANT_IMAGE  = 'linode/debian10';

my $type    = get_type();
my $image   = get_image();

my $pw = `pw`;
chomp $pw;

say "will create $image->{id} on $type->{id}";

my $res = $http->POST(
  'https://api.linode.com/v4/linode/instances',
  encode_json({
    authorized_users  => [ 'rjbs-tpf' ],
    image             => $image->{id},
    type              => $type->{id},
    region            => 'us-east',
    root_pass         => $pw,
    # label           => '...',
  }),
  content_type => 'application/json',
  headers => [
    Authorization => "Bearer $ENV{LINODE_API_TOKEN}",
  ]
)->get;

my $linode = decode_json($res->decoded_content(charset => undef));

say "linode name  : $linode->{label}";
say "IP address   : $linode->{ipv4}[0]";
say "root password: $pw";

my $status = $linode->{status};
until ($status eq 'running') {
  say "Linode is $status, giving it a few seconds...";
  sleep 5;

  my $get_res = $http->GET(
    "https://api.linode.com/v4/linode/instances/$linode->{id}",
    headers => [
      Authorization => "Bearer $ENV{LINODE_API_TOKEN}",
    ],
  )->get;

  die "failed to check status\n" unless $get_res->is_success;

  my $data = decode_json($get_res->decoded_content(charset => undef));
  $status = $data->{status};
}

say "Linode is ready.  Go smoke!";

sub get_type {
  my $res = $http->GET('https://api.linode.com/v4/linode/types')
                 ->get;

  my $data = decode_json($res->decoded_content(charset => undef));

  my ($type) = grep {; $_->{id} eq $WANT_TYPE }
               $data->{data}->@*;

  return $type;
}

sub get_image {
  my $res = $http->GET('https://api.linode.com/v4/images')
                 ->get;

  my $data = decode_json($res->decoded_content(charset => undef));

  my ($image) = grep {; $_->{id} eq $WANT_IMAGE }
               $data->{data}->@*;

  return $image;
}
